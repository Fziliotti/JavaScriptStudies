A maneira mais comum de enviar dados em uma requisição HTTP é mandá-los no body da requisição. De preferência utilizando um método HTTP cuja semântica seja compatível com essa necessadidade. A nova rota já foi definida com o método POST, então está de acordo. Veja agora como ficaria um exemplo dessa requisição utilizando o CURL:

curl http://localhost:3000/pagamentos/pagamento \
  -X POST \ 
  -v \
  -H "Content-type: application/json" \
  -d '{
          "forma_de_pagamento": "payfast",
          "valor": "10.87",
          "moeda": "BRL",
          "descricao": "descrição do pagamento"
      }'



Na primeira linha foi definida a url de acordo com a rota implementada, em seguida o verbo POST através do parâmetro -X. O parâmetro -v indica que a operação deve ser mais 'verbosa' que o default, ou seja, deve imprimir uma maior quantidade de dados descritivos no console.

O parâmetro -H indica que está sendo passado um header HTTP, indicando que o tipo do conteudo enviado terá um formato json. A própria convenção do HTTP define um header específico para quando se quer passar esse tipo de informação, que é o Content-type, exatamente o que foi utilzado no código. O conteudo que ele recebeu também e uma convenção que define o tipo do dado como json: application/json.

O formato json foi definido por ser um formato que conversa muito bem com o node.js e várias tecnologias web em geral. Afinal ele nasceu exatamente com esse propósito e por isso é um dos campeões de uso em apis, como a do PayFast.

Por fim, o parâmetro -d indica o que se quer enviar de fato como corpo da requisição. No caso do exemplo em questão, o corpo é exatamente um json que possui os dados do pagamento a ser cadastrado.